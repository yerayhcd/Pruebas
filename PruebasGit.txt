//permisos de administrador en la ejecución de linux
sudo

//Cambiar de unidad y carpeta en el bash
cd /G/Practicas/Git

//Se muestran todas las configuraciones de Git.
git config

//Mostrar la ruta de los párametros modificados
git config --list --show-origin

//Se muestra la configuración de Git.
git config --list

//Configurar el nombre de usuario para registrar las modificaciones
git config --global user.name "Nombre de Usuario"

//configurar la cuenta de correo del usuario que realizara las modificaciones
git config --global user.email "usuario@correo.com"

//Inscibe la carpeta en el controlador de versiones de Git.
git init

//Adiciona un archivo a Git.
git add nombreArchivo.txt
//Adiciona todos los archivos ubicados en el repositorio
git add .

//Confirma la actualización de cambios realizados en Git y se adiciona un comentario.
git commit -m "Un comentario!!!"

//Conocer el estatus del repositorio
git status

//Conocer las modificaciones a través de la historia realizadas sobre un archivo.
git log nombreArchivo.txt

//Enviar el hacia un repositorio remoto.
git push

//Traer de un repositorio remoto hacia un ruta local
git pull

//Consultar las modificaciones realizadas sobre el archivo
git show nombreArchivo.txt

//Para abrir un archivo directamente en Visual Studio Code
code nombreArchivo.txt

//Al momento de no hacer commentarios en el commit Git muestra una ventana solicitando el mensaje
//para salir de esta ventana hay que pedir ayuda, gritar o hacer un curso.

//se debe presionar las teclas
Esc + Shift + z + z

//En cualquier momento se puede obtener las diferencias en las versiones guardadas por Git.
1. obtener la llave de la modificación, es un número largo que se ve despues de la palabra commit cuando se ejecuta la instrucción
git Log nombreArchivo.txt
2. ejecutar la siguiente instrucción
git diff 49c875e94085c8a3d3668e5a2e271c75b6d899fc f4d1cbc2b74c97c5414481433240b62edd50a7fe
3. La forma correcta es colocar la versión mas reciente primero y posterior la mas antigua.
// y en rojo se muestra lo nuevo y en verde a versión anterior si existe.

//Si quiero devolver el archivo a una versión anterior se utilisa git reset
git reset 557800ab58b6eb223825c5e793ac8293a2f37f8d --hard

1. --hard devuelve todo a la versión escogida.
2. --soft deja en staying las modificaciones realizadas para validar.

//cuando se ha creado un archivo y se adiciona pero sin commit, el archivo posteriormente puede ser modicado y con git status 
//se pueden visualizar las modificaciones realizadas despues del add con -    git diff
git diff
//se muestra un + en verde con las adiciones y un - en rojo para lo eliminado

//para ver los cambios especificos a partir del commit
git log --stat

//con la letra q se puede salir de la instrucción.

para ver archivos en versiones previas se debe buscar la identificación de la versión y el nombre del archivo, OJO no se debe hacer commit.
git